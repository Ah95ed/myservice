{"snapshots":{"C:/Users/Ahmed/StudioProjects/myservice/android/app/build.gradle":{"filePath":"C:/Users/Ahmed/StudioProjects/myservice/android/app/build.gradle","baseContent":"plugins {\n    id \"com.android.application\"\n    // START: FlutterFire Configuration\n    id 'com.google.gms.google-services'\n    // END: FlutterFire Configuration\n    id \"kotlin-android\"\n    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n    id \"dev.flutter.flutter-gradle-plugin\"\n}\n\ndef localProperties = new Properties()\ndef localPropertiesFile = rootProject.file(\"local.properties\")\nif (localPropertiesFile.exists()) {\n    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n        localProperties.load(reader)\n    }\n}\n\ndef flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\nif (flutterVersionCode == null) {\n    flutterVersionCode = \"1\"\n}\n\ndef flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\nif (flutterVersionName == null) {\n    flutterVersionName = \"1.0\"\n}\ndef keystoreProperties = new Properties()\ndef keystorePropertiesFile = rootProject.file('key.properties')\nif (keystorePropertiesFile.exists()) {\nkeystoreProperties.load(new FileInputStream(keystorePropertiesFile))\n}\n\nandroid {\n   namespace \"com.Blood.types\"\n    compileSdkVersion 36\n    ndkVersion '27.0.12077973'\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_1_8\n        targetCompatibility = JavaVersion.VERSION_1_8\n    }\n     kotlinOptions {\n        jvmTarget = JavaVersion.VERSION_1_8\n    }\n\n    signingConfigs {\n   release {\n       keyAlias keystoreProperties['keyAlias']\n       keyPassword keystoreProperties['keyPassword']\n       storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null\n       storePassword keystoreProperties['storePassword']\n   }\n}\n        buildTypes {\n           release {\n            \n      minifyEnabled true\n      shrinkResources true\n      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n                signingConfig signingConfigs.release\n           }\n        }\n    defaultConfig {\n        applicationId = \"com.Blood.types\"\n        minSdk = 24\n        targetSdk = 36\n        versionCode = 38\n        versionName = '6.6.3'\n        ndkVersion '27.0.12077973'\n        multiDexEnabled true\n        ndk {\n      abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'\n    }\n    }\n     configurations {\n    compile.exclude group: 'com.google.zxing'\n  }\n}\n\ndependencies {\n   implementation 'com.google.android.recaptcha:recaptcha:18.7.1'\n   configurations.all {\n       exclude group: 'com.google.android.gms', \n       module: 'play-services-safetynet'\n   }\n}\n\nflutter {\n    source = \"../..\"\n}\n","baseTimestamp":1756967819678},"C:/Users/Ahmed/StudioProjects/myservice/android/settings.gradle":{"filePath":"C:/Users/Ahmed/StudioProjects/myservice/android/settings.gradle","baseContent":"pluginManagement {\n    def flutterSdkPath = {\n        def properties = new Properties()\n        file(\"local.properties\").withInputStream { properties.load(it) }\n        def flutterSdkPath = properties.getProperty(\"flutter.sdk\")\n        assert flutterSdkPath != null, \"flutter.sdk not set in local.properties\"\n        return flutterSdkPath\n    }()\n\n    includeBuild(\"$flutterSdkPath/packages/flutter_tools/gradle\")\n\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\n\nplugins {\n    // 'com.android.tools.build:gradle:8.5.1'\n    id \"dev.flutter.flutter-plugin-loader\" version \"1.0.0\"\n    id \"com.android.application\" version \"8.7.0\" apply false    // id \"com.android.application\" version \"7.3.1\" apply false\n    // START: FlutterFire Configuration\n    id \"com.google.gms.google-services\" version \"4.4.2\" apply false\n    // END: FlutterFire Configuration\n\n    id \"org.jetbrains.kotlin.android\" version \"2.1.0\" apply false\n\n}\n\ninclude \":app\"\n","baseTimestamp":1756967870734,"deltas":[{"timestamp":1756967874706,"changes":[{"type":"MODIFY","lineNumber":26,"content":"    id \"org.jetbrains.kotlin.android\" version \"2.2.10\" apply false","oldContent":"    id \"org.jetbrains.kotlin.android\" version \"2.1.0\" apply false"}]},{"timestamp":1756967880025,"changes":[{"type":"MODIFY","lineNumber":23,"content":"    id \"com.google.gms.google-services\" version \"4.4.3\" apply false","oldContent":"    id \"com.google.gms.google-services\" version \"4.4.2\" apply false"}]},{"timestamp":1756967882649,"changes":[{"type":"MODIFY","lineNumber":21,"content":"    id \"com.android.application\" version \"8.7.3\" apply false    // id \"com.android.application\" version \"7.3.1\" apply false","oldContent":"    id \"com.android.application\" version \"8.7.0\" apply false    // id \"com.android.application\" version \"7.3.1\" apply false"}]},{"timestamp":1756967887262,"changes":[{"type":"MODIFY","lineNumber":21,"content":"    id \"com.android.application\" version \"8.12.2\" apply false    // id \"com.android.application\" version \"7.3.1\" apply false","oldContent":"    id \"com.android.application\" version \"8.7.3\" apply false    // id \"com.android.application\" version \"7.3.1\" apply false"}]}]},"C:/Users/Ahmed/StudioProjects/myservice/android/gradle/wrapper/gradle-wrapper.properties":{"filePath":"C:/Users/Ahmed/StudioProjects/myservice/android/gradle/wrapper/gradle-wrapper.properties","baseContent":"distributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-9.0.0-bin.zip","baseTimestamp":1756967903766},"C:/Users/Ahmed/StudioProjects/myservice/pubspec.yaml":{"filePath":"C:/Users/Ahmed/StudioProjects/myservice/pubspec.yaml","baseContent":"name: Al_Zab_township_guide\ndescription: A new Flutter project.\n\npublish_to: 'none'\nversion: 1.0.0+1\nenvironment:\n  sdk: '3.9.0'\n  flutter: '3.35.2'\n\ndependencies:\n  flutter: \n    sdk: flutter\n  cupertino_icons: \n  firebase_core:\n  email_otp: \n  cloud_firestore:\n  recaptcha_enterprise_flutter: \n  provider:\n  url_launcher:\n  shared_preferences:\n  flutter_localizations:\n    sdk: flutter\n  firebase_database:\n  intl: \n  tutorial_coach_mark: \n  appwrite: \n    git: https://github.com/appwrite/sdk-for-flutter.git\n  firebase_remote_config: \n  share_plus: \n  package_info_plus: \n  http:\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\n  flutter_lints: \n\nflutter:\n  generate: true\n\n  uses-material-design: true\n\n  assets:\n    - assets/logo/\n    - shorebird.yaml\n\nflutter_intl:\n  enabled: true\n\n","baseTimestamp":1756968093884},"C:/Users/Ahmed/StudioProjects/myservice/.github/workflows/android.yaml":{"filePath":"C:/Users/Ahmed/StudioProjects/myservice/.github/workflows/android.yaml","baseContent":"name: myService android CI/CD\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  build_android:\n    name: APK Build\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        abi: [armeabi-v7a, arm64-v8a, x86_64]\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up JDK\n        uses: actions/setup-java@v4\n        with:\n          distribution: 'temurin'\n          java-version: '21'\n\n      - name: Setup Flutter\n        uses: subosito/flutter-action@v2\n        with:\n          channel: 'stable'\n          flutter-version: '3.35.2'\n\n      \n\n      - name: clean Project\n        run: flutter clean\n        \n      - name: flutter update package \n        run: flutter pub upgrade\n\n      - name: clean outdated \n        run: flutter pub outdated\n\n      - name: Install dependencies\n        run: flutter pub get\n\n      - name: Build APKs\n        run: flutter build apk --split-per-abi\n\n      - name: Upload APK Artifacts (Individual Files)\n        uses: actions/upload-artifact@v4\n        with:\n          name: apk-${{ matrix.abi }}\n          path: build/app/outputs/flutter-apk/app-${{ matrix.abi }}-release.apk\n\n","baseTimestamp":1756968150782,"deltas":[{"timestamp":1756968159415,"changes":[{"type":"MODIFY","lineNumber":26,"content":"        uses: subeditor/flutter-action@v2","oldContent":"        uses: subosito/flutter-action@v2"}]},{"timestamp":1756968166803,"changes":[{"type":"MODIFY","lineNumber":22,"content":"          distribution: 'murine'","oldContent":"          distribution: 'temurin'"}]},{"timestamp":1756968171879,"changes":[{"type":"MODIFY","lineNumber":22,"content":"          distribution: 'temurin'","oldContent":"          distribution: 'murine'"},{"type":"MODIFY","lineNumber":26,"content":"        uses: subosito/flutter-action@v2","oldContent":"        uses: subeditor/flutter-action@v2"}]}]},"C:/Users/Ahmed/StudioProjects/myservice/android/app/src/main/kotlin/com/Blood/myservice/MainActivity.kt":{"filePath":"C:/Users/Ahmed/StudioProjects/myservice/android/app/src/main/kotlin/com/Blood/myservice/MainActivity.kt","baseContent":"package com.Blood.myservice\n\nimport io.flutter.embedding.android.FlutterActivity\nimport android.content.Intent\nimport android.os.Bundle\nimport io.flutter.plugin.common.MethodChannel\n\nclass MainActivity: FlutterActivity() {\n    // private val CHANNEL = \"com.blood.share\"\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        EdgeToEdge.enable(this);\n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            WindowCompat.setDecorFitsSystemWindows(window, false)\n          }\n    //     MethodChannel(flutterEngine?.dartExecutor?\n    //     .binaryMessenger?, CHANNEL).setMethodCallHandler { call, result ->\n    //         if (call.method == \"shareText\") {\n    //             val text = call.argument<String>(\"https://play.google.com/store/apps/details?id=com.Blood.types\")\n    //             shareText(text)\n    //             result.success(null)\n    //         } else {\n    //             result.notImplemented()\n    //         }\n    //     }\n    // }\n\n    // private fun shareText(text: String?) {\n    //     if (text != null) {\n    //         val sendIntent: Intent = Intent().apply {\n    //             action = Intent.ACTION_SEND\n    //             putExtra(Intent.EXTRA_TEXT, text)\n    //             type = \"text/plain\"\n    //         }\n    //         val shareIntent = Intent.createChooser(sendIntent, null)\n    //         startActivity(shareIntent)\n    //     }\n    }\n}\n","baseTimestamp":1756969374876,"deltas":[{"timestamp":1756969379299,"changes":[{"type":"MODIFY","lineNumber":12,"content":"       ","oldContent":"        EdgeToEdge.enable(this);"}]},{"timestamp":1756969395835,"changes":[{"type":"INSERT","lineNumber":12,"content":"        enableEdgeToEdge()"}]},{"timestamp":1756969410072,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"import android.content.Intent"}]},{"timestamp":1756969413151,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import io.flutter.plugin.common.MethodChannel"}]},{"timestamp":1756970599735,"changes":[{"type":"DELETE","lineNumber":10,"oldContent":"        enableEdgeToEdge()"},{"type":"DELETE","lineNumber":11,"oldContent":"       "},{"type":"DELETE","lineNumber":12,"oldContent":"         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"},{"type":"DELETE","lineNumber":13,"oldContent":"            WindowCompat.setDecorFitsSystemWindows(window, false)"},{"type":"DELETE","lineNumber":14,"oldContent":"          }"},{"type":"INSERT","lineNumber":10,"content":"        // enableEdgeToEdge()"},{"type":"INSERT","lineNumber":11,"content":""},{"type":"INSERT","lineNumber":12,"content":"//         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"},{"type":"INSERT","lineNumber":13,"content":"//            WindowCompat.setDecorFitsSystemWindows(window, false)"},{"type":"INSERT","lineNumber":14,"content":"//          }"}]}]}}}